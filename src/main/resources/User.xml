<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- 为这个mapper指定一个唯一的namespace，namespace的值习惯上设置成包名+sql映射文件名，这样就能够保证namespace的值是唯一的
例如namespace="me.gacl.mapping.userMapper"就是me.gacl.mapping(包名)+userMapper(userMapper.xml文件去除后缀)
 -->
<mapper namespace="test.com.cn.inter.IUserOperation">
    <!-- 在select标签中编写查询的SQL语句， 设置select标签的id属性为getUser，id属性值必须是唯一的，不能够重复
    使用parameterType属性指明查询时使用的参数类型，resultType属性指明查询返回的结果集类型
    resultType="me.gacl.domain.User"就表示将查询结果封装成一个User类的对象返回
    User类就是users表所对应的实体类
    -->
    <!--
        根据id查询得到一个user对象
     -->
    <select id="getUser" parameterType="int"
            resultType="User">
        select * from test where id=#{id} limit 1
    </select>

    <select id="selectUsers"  resultMap="resultListUser">
        select * from test
    </select>

    <resultMap type="User" id="resultListUser">
        <id column="id" property="id" />
        <result column="name" property="name" />
    </resultMap>

    <insert id="addUser" parameterType="User">
        insert into test(name, id)
        values(#{name},#{id})
    </insert>

    <update id="updateUser" parameterType="User" >
        update test set name=#{name} where id=#{id}
    </update>

    <update id="deleteUser" parameterType="User" >
        delete from test where id=#{id}
    </update>
    <select id="getUserBooks" parameterType="int" resultMap="resultUserBookList">
        select test.id,test.name,books.bookname from test, books
        where test.id=books.userid and test.id=#{id}
    </select>

    <resultMap id="resultUserBookList" type="Book">
        <result property="bookname" column="bookname" />
        <!--
        <association property="user" javaType="User">
            <result property="id" column="id" />
            <result property="name" column="name" />
        </association>
        -->
        <association property="user" javaType="User" resultMap="resultListUser"/>
    </resultMap>
</mapper>